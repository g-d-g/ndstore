# clone the repository
git clone git@github.com:openconnectome/open-connectome.git

# make a virtualenv if you want
mkvirtualenv ocp

# install and configure mysql 
# install and configure memcache

# then follow the instructions at
cd ~/open-connectome/setup/mysql

# fulfill python requirements
pip install numpy scipy h5py django django-registration-redux django-celery mysql-python pytest pillow pylibmc posix_ipc

# MACOSX note: had to follow weird library linking instructions on http://www.strangedata.ninja/2014/08/07/how-to-install-mysql-server-mac-and-python-mysqldb-library/ to get "import MySQLdb" to work

# migrate the databases, collect static files,

cd ~/open-connectome/django
python manage.py migrate
python manage.py createsuperuser
python manage.py collectstatic

# configure settings
cd ~/open-connectome/django/OCP
cp settings.py.example settings.py
cp settings_secret.py.example settings_secret.py

# setup the settings files
#
#  changed the fields in settings.py
#
# 	STATIC_ROOT
#	STATICFILES_DIRS
#	TEMPLATE_DIRS
#       FORCE_SCRIPT_NAME       ## for the dev server set to ""
#
#  edited the fields in settings_secret.py
#
#  	USER
#	PASSWORD
#	SECRET_KEY
#     	BACKUP_PATH

# make the logfile directory and make it readable
sudo mkdir /var/log/ocp
sudo chown XXX:YYY /var/log/ocp

# build ocplib
cd ~/open-connectome/ocplib
make -f makefile_MAC

# make cython accelerators 
cd ~/open-connectome/cython/ocpca
python setup.py install

# in one window, start the dev server
cd ~/open-connectome/django
python manage.py runserver

# in another window
cd ~/open-connectome/test
py.test


###### More advanced stuff ######

# onto nginx
brew install nginx

# add clause to nginx for ocp and upstream server (see setup/nginx/default)

# edit uswgi file ocp.ini
#
# change all paths for local system

# configure uswgi at ~/open-connectome/setup/ocp.ini
# run uwsgi in foreground
uwsgi ocp.ini

# Create paths for sockets
mkdir /usr/local/var/run/uwsgi
mkdir /usr/local/var/run/uwsgi/app
mkdir /usr/local/var/run/uwsgi/app/ocp

# Create path for logs
mkdir /usr/local/var/log/uwsgi/

# run nginx (as user)
nginx

# stop nginx
nginx -s stop

# run uwsgi as user
workon XXX
uwsgi ocp.ini

# right now nothing is daemonized
